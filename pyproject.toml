[project]
name = "glue-qt"
classifiers = [
    "Intended Audience :: Science/Research",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Programming Language :: Python :: 3.14",
    "Topic :: Scientific/Engineering :: Visualization",
    "License :: OSI Approved :: BSD License",
]

description = "Multidimensional data visualization across files"
readme = "README.rst"
requires-python = ">=3.8"
dynamic = [ "version",]

dependencies = [
    "glue-core>=1.23.0",
    "numpy>=1.17",
    "matplotlib>=3.2",
    "scipy>=1.1",
    "echo>=0.6",
    "astropy>=4.0",
    "setuptools>=30.3.0",
    "qtpy>=1.9",
    "ipython>=4.0,<9.0",
    "ipykernel>=4.0,!=5.0.0,!=5.1.0",
    "qtconsole>=4.3,!=5.4.2",
    "pvextractor>=0.2",
    "importlib_metadata>=3.6; python_version<'3.10'",
]

[[project.authors]]
name = "Thomas Robitaille"
email = "glueviz@gmail.com"

[[project.authors]]
name = "Chris Beaumont"

[project.urls]
Homepage = "http://glueviz.org"

[project.optional-dependencies]
docs = [
    "sphinx<7",
    "sphinx-automodapi",
    "sphinxcontrib-spelling",
    "numpydoc",
    "sphinx-book-theme",
]

qt = [ "PyQt5>=5.14",]

test = [
    "pytest",
    "pytest-cov",
    "pytest-faulthandler",
    "pytest-flake8",
    "objgraph",
   ]

[project.gui-scripts]
glue = "glue_qt.main:main"

[project.entry-points."glue.plugins"]
pv_slicer = "glue_qt.plugins.tools.pv_slicer:setup"
dendro_viewer = "glue_qt.plugins.dendro_viewer:setup"
image_viewer = "glue_qt.viewers.image:setup"
scatter_viewer = "glue_qt.viewers.scatter:setup"
histogram_viewer = "glue_qt.viewers.histogram:setup"
profile_viewer = "glue_qt.viewers.profile:setup"
table_viewer = "glue_qt.viewers.table:setup"
directory_importer = "glue_qt.io.directory_importer:setup"

[build-system]
requires = [
    "setuptools>=61.2",
    "setuptools_scm",
]

build-backend = "setuptools.build_meta"

[tool.setuptools]
zip-safe = false
include-package-data = false

[tool.setuptools.packages.find]
namespaces = false

[tool.setuptools.package-data]
"*" = [ "*.png", "*.ui", "*.glu", "*.hdf5", "*.fits", "*.xlsx", "*.txt", "*.csv", "*.svg", "*.vot",]
"glue_qt.viewers.histogram.tests" = [ "data/*.glu",]
"glue_qt.viewers.image.tests" = [ "data/*.glu", "baseline/*.png",]
"glue_qt.viewers.profile.tests" = [ "data/*.glu",]
"glue_qt.viewers.scatter.tests" = [ "data/*.glu",]

[tool.setuptools_scm]
version_file = "glue_qt/_version.py"

[tool.pytest.ini_options]
addopts = "-p no:logging"
# Legacy ignores?
# E402, E741 (permanently) in ruff lint.ignore
# E402, E501, F841, W605 (temporarily) in .ruff.toml
flake8-ignore = "E226,E501,E731,F841,E127,E741,E402,W504,W605"
filterwarnings = [
    "ignore::PendingDeprecationWarning:xlrd",
    "ignore:Session._key_changed is deprecated",
    "ignore:zmq.* is deprecated",
    "ignore:can't be aliased because it is another magic command",
    "ignore:DragAndDropTerminal._style_sheet_changed is deprecated",
    "ignore:::ipykernel",
    "ignore:Accessing zmq Socket attribute",
    "ignore:'U' mode is deprecated:DeprecationWarning:PyQt5",
]

[tool.coverage.run]
omit = [
    "glue_qt/*tests/*",
    "*/glue_qt/*tests/*",
]

[tool.coverage.paths]
source = [
    "glue_qt/",
    "*/site-packages/glue_qt",
    "*\\site-packages\\glue_qt",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "except ImportError",
    "raise AssertionError",
    "raise NotImplementedError",
    "def main\\(.*\\):",
    "pragma: py{ignore_python_version}",
    "def _ipython_key_completions_",
]

[tool.ruff]
# ruff check: pycodestyle, Pyflakes, McCabe, flake8-bugbear, flake8-simplify
lint.select = ["ALL"]
exclude=[
    "*_parsetab.py",
    "*_lextab.py"
]
lint.ignore = [  # NOTE: non-permanent exclusions should be added to `.ruff.toml` instead.

    # flake8-builtins (A) : shadowing a Python built-in.
    # New ones should be avoided and is up to maintainers to enforce.
    "A00",

    # flake8-bugbear (B)
    "B008",  # FunctionCallArgumentDefault

    # flake8-commas (COM)
    "COM812",  # TrailingCommaMissing
    "COM819",  # TrailingCommaProhibited

    # pydocstyle (D)
    # Missing Docstrings
    "D102",  # Missing docstring in public method. Don't check b/c docstring inheritance.
    "D105",  # Missing docstring in magic method. Don't check b/c class docstring.
    # Whitespace Issues
    "D200",  # FitsOnOneLine
    # Docstring Content Issues
    "D410",  # BlankLineAfterSection. Using D412 instead.
    "D400",  # EndsInPeriod.  NOTE: might want to revisit this.

    # pycodestyle (E, W)
    "E711",  # NoneComparison  (see unfixable)
    "E741",  # AmbiguousVariableName. Physics variables are often poor code variables

    # flake8-fixme (FIX)
    "FIX002",  # Line contains TODO | notes for improvements are OK iff the code works

    # ISC001 shouldn't be used with ruff format
    # https://docs.astral.sh/ruff/formatter/#conflicting-lint-rules
    "ISC001",

    # pep8-naming (N)
    "N803",  # invalid-argument-name. Physics variables are often poor code variables
    "N806",  # non-lowercase-variable-in-function. Physics variables are often poor code variables

    # pandas-vet (PD)
    "PD",

    # Pylint (PLC, PLE, PLR, PLW)
    "PLC0415",  # `import` should be at the top-level of a file

    # flake8-simplify (SIM)
    "SIM103", # needless-bool (cannot be safely applied in all contexts (np.True_ is not True))

    # flake8-self (SLF)
    "SLF001", # private member access

    # flake8-todos (TD)
    "TD002",  # Missing author in TODO
]

[tool.ruff.lint.extend-per-file-ignores]
"setup.py" = ["INP001"]  # Part of configuration, not a package.
".github/workflows/*.py" = ["INP001"]
"test_*.py" = [
    "ANN201",  # Public function without return type annotation
    "B018",  # UselessExpression
    "D",  # pydocstyle
    "S101",  # Use of assert detected
]
"glue_qt/config.py" = ["E402"]      # Imports are done as needed.
"glue_qt/conftest.py" = ["INP001"]  # Part of configuration, not a package.
"doc/*.py" = [
    "INP001",  # implicit-namespace-package. The examples are not a package.
]

[tool.ruff.lint.flake8-annotations]
ignore-fully-untyped = true
mypy-init-return = true

[tool.ruff.lint.flake8-comprehensions]
allow-dict-calls-with-keyword-arguments = true

[tool.ruff.lint.flake8-type-checking]
exempt-modules = []

[tool.ruff.lint.isort]
known-first-party = ["glue", "glue_qt"]

[tool.ruff.lint.pydocstyle]
convention = "numpy"
